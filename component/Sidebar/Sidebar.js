"use client";
import React, { useEffect, useState } from "react";
import { serverUrl } from "@/config";
import axios from "axios";
import { useRouter, useParams, usePathname } from "next/navigation";
import { RxCross2 } from "react-icons/rx";
import { RxCross1 } from "react-icons/rx";
import { IoChevronBackOutline } from "react-icons/io5";
import { RiTeamLine } from "react-icons/ri";
import Parser from "../UI/Parser";

const Sidebar = ({ isOpen, setIsOpen }) => {
  const router = useRouter();
  const navigate = (page) => {
    router.push(page);
  };
  const currentPath = usePathname();

  const home = currentPath === `/`;
  const service =
    currentPath === `/service` || currentPath.includes(`/service`);
  const blogs = currentPath === `/blogs` || currentPath.includes(`/blogs`);
  const gallery = currentPath === `/gallery`;
  const team = currentPath === `/team`;
  const aboutus = currentPath === `/about` || currentPath.includes(`/about`);
  const contact = currentPath === `/contact`;
  const [serviceShown, setServiceShown] = useState(false);
  const [aboutShown, setAboutShown] = useState(false);

    
  const aboutOptions = [
    {
      id:1,
      title:"Who we are",
      path:"/about"
    },
    {
      id: 2,
      title: "Founder",
      path: "/about/founder"
    },
    {
      id: 3,
      title: "Testimonials",
      path: "/testimonials"
    },
    // {
    //   id: 3,
    //   title: "Company Culture",
    //   path: "/company-culture"
    // }
  ];


  const [services, setServices] = useState([]);
  const getServiceList = async () => {
    try {
      const { data } = await axios.get(`${serverUrl}/getServiceList`);
      setServices(data.serviceList);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    getServiceList();
  }, []);

  return (
    isOpen && (
      <div
        className="fixed w-screen h-screen top-0 left-0 backdrop-blur-md"
        style={{ zIndex: "998", background: "rgba(34, 34, 34, 0.61)" }}
      >
        {!serviceShown && !aboutShown && (
          <div className="absolute right-[24px] top-[24px] ">
            <RxCross1
              className="text-[#FFF] text-[26px]"
              onClick={() => {
                setIsOpen(false);
              }}
            />
          </div>
        )}
        {!serviceShown && !aboutShown ? (
          <div className="w-[80%] bg-[white] h-full pl-[20px] pt-[54px] flex flex-col gap-[25px]">
            <h3 className="font-[700] text-[22px] md22:text-[24px] text-[#252B42] mb-[10px]">
              DMA
            </h3>
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                navigate(`/`);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_187_5724)">
                  <path
                    d="M19.2675 7.55743L12.9467 1.23576C12.1644 0.455756 11.1047 0.0177431 10 0.0177431C8.89529 0.0177431 7.83564 0.455756 7.05334 1.23576L0.73251 7.55743C0.499531 7.78892 0.314818 8.06435 0.189079 8.36775C0.0633394 8.67116 -0.000925334 8.9965 1.00662e-05 9.32493V17.5058C1.00662e-05 18.1688 0.263402 18.8047 0.732243 19.2735C1.20108 19.7424 1.83697 20.0058 2.50001 20.0058H17.5C18.1631 20.0058 18.7989 19.7424 19.2678 19.2735C19.7366 18.8047 20 18.1688 20 17.5058V9.32493C20.0009 8.9965 19.9367 8.67116 19.8109 8.36775C19.6852 8.06435 19.5005 7.78892 19.2675 7.55743ZM12.5 18.3391H7.50001V15.0608C7.50001 14.3977 7.7634 13.7618 8.23224 13.293C8.70109 12.8242 9.33697 12.5608 10 12.5608C10.6631 12.5608 11.2989 12.8242 11.7678 13.293C12.2366 13.7618 12.5 14.3977 12.5 15.0608V18.3391ZM18.3333 17.5058C18.3333 17.7268 18.2455 17.9387 18.0893 18.095C17.933 18.2513 17.721 18.3391 17.5 18.3391H14.1667V15.0608C14.1667 13.9557 13.7277 12.8959 12.9463 12.1145C12.1649 11.3331 11.1051 10.8941 10 10.8941C8.89494 10.8941 7.83513 11.3331 7.05373 12.1145C6.27233 12.8959 5.83334 13.9557 5.83334 15.0608V18.3391H2.50001C2.279 18.3391 2.06703 18.2513 1.91075 18.095C1.75447 17.9387 1.66668 17.7268 1.66668 17.5058V9.32493C1.66745 9.10408 1.75517 8.89242 1.91084 8.73576L8.23168 2.4166C8.70143 1.94904 9.33723 1.68655 10 1.68655C10.6628 1.68655 11.2986 1.94904 11.7683 2.4166L18.0892 8.73827C18.2442 8.8943 18.3319 9.10495 18.3333 9.32493V17.5058Z"
                    fill="#335BF5"
                  />
                  <g clip-path="url(#clip1_187_5724)">
                    <path
                      d="M19.2675 7.5575L12.9467 1.23583C12.1644 0.455824 11.1047 0.0178118 10 0.0178118C8.89529 0.0178118 7.83564 0.455824 7.05334 1.23583L0.73251 7.5575C0.499531 7.78899 0.314818 8.06442 0.189079 8.36782C0.0633394 8.67123 -0.000925334 8.99657 1.00662e-05 9.325V17.5058C1.00662e-05 18.1689 0.263402 18.8048 0.732243 19.2736C1.20108 19.7424 1.83697 20.0058 2.50001 20.0058H17.5C18.1631 20.0058 18.7989 19.7424 19.2678 19.2736C19.7366 18.8048 20 18.1689 20 17.5058V9.325C20.0009 8.99657 19.9367 8.67123 19.8109 8.36782C19.6852 8.06442 19.5005 7.78899 19.2675 7.5575ZM12.5 18.3392H7.50001V15.0608C7.50001 14.3978 7.7634 13.7619 8.23224 13.2931C8.70108 12.8242 9.33697 12.5608 10 12.5608C10.6631 12.5608 11.2989 12.8242 11.7678 13.2931C12.2366 13.7619 12.5 14.3978 12.5 15.0608V18.3392ZM18.3333 17.5058C18.3333 17.7268 18.2455 17.9388 18.0893 18.0951C17.933 18.2514 17.721 18.3392 17.5 18.3392H14.1667V15.0608C14.1667 13.9558 13.7277 12.896 12.9463 12.1146C12.1649 11.3332 11.1051 10.8942 10 10.8942C8.89494 10.8942 7.83513 11.3332 7.05373 12.1146C6.27233 12.896 5.83334 13.9558 5.83334 15.0608V18.3392H2.50001C2.279 18.3392 2.06703 18.2514 1.91075 18.0951C1.75447 17.9388 1.66668 17.7268 1.66668 17.5058V9.325C1.66745 9.10415 1.75517 8.89249 1.91084 8.73583L8.23168 2.41667C8.70143 1.94911 9.33723 1.68662 10 1.68662C10.6628 1.68662 11.2986 1.94911 11.7683 2.41667L18.0892 8.73833C18.2442 8.89437 18.3319 9.10502 18.3333 9.325V17.5058Z"
                      fill={home ? "#335BF5" : "#1F1F22"}
                    />
                  </g>
                </g>
                <defs>
                  <clipPath id="clip0_187_5724">
                    <rect width="20" height="20" fill="white" />
                  </clipPath>
                  <clipPath id="clip1_187_5724">
                    <rect width="20" height="20" fill="white" />
                  </clipPath>
                </defs>
              </svg>

              <p
                className={`font-[500] text-[18px] ${
                  home ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                Home
              </p>
            </div>
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                setAboutShown(true);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_501_6260)">
                  <path
                    d="M10 20C11.9778 20 13.9112 19.4135 15.5557 18.3147C17.2002 17.2159 18.4819 15.6541 19.2388 13.8268C19.9957 11.9996 20.1937 9.98891 19.8078 8.0491C19.422 6.10929 18.4696 4.32746 17.0711 2.92893C15.6725 1.53041 13.8907 0.578 11.9509 0.192147C10.0111 -0.193704 8.00042 0.00432882 6.17316 0.761205C4.3459 1.51808 2.78411 2.79981 1.6853 4.4443C0.586486 6.08879 -4.86183e-06 8.02219 -4.68893e-06 10C0.00286229 12.6513 1.05735 15.1932 2.93209 17.0679C4.80684 18.9426 7.34871 19.9971 10 20ZM9.99999 1.66667C11.6482 1.66667 13.2593 2.15541 14.6297 3.07109C16.0002 3.98677 17.0683 5.28825 17.699 6.81097C18.3297 8.33369 18.4947 10.0092 18.1732 11.6258C17.8517 13.2423 17.058 14.7271 15.8926 15.8926C14.7271 17.058 13.2423 17.8517 11.6257 18.1732C10.0092 18.4948 8.33368 18.3297 6.81097 17.699C5.28825 17.0683 3.98676 16.0002 3.07108 14.6298C2.1554 13.2593 1.66666 11.6482 1.66666 10C1.66909 7.79061 2.54784 5.6724 4.11012 4.11012C5.6724 2.54785 7.7906 1.66909 9.99999 1.66667Z"
                    fill={aboutus ? "#335BF5" : "#1F1F22"}
                  />
                  <path
                    d="M9.9987 15.8333C10.2197 15.8333 10.4317 15.7455 10.588 15.5893C10.7442 15.433 10.832 15.221 10.832 15L10.832 8.33333C10.832 8.11231 10.7442 7.90035 10.588 7.74407C10.4317 7.58779 10.2197 7.49999 9.9987 7.49999C9.77768 7.49999 9.56572 7.58779 9.40944 7.74407C9.25316 7.90035 9.16536 8.11231 9.16536 8.33333L9.16536 15C9.16536 15.221 9.25316 15.433 9.40944 15.5893C9.56572 15.7455 9.77768 15.8333 9.9987 15.8333Z"
                    fill={aboutus ? "#335BF5" : "#1F1F22"}
                  />
                  <path
                    d="M9.16536 5C9.16536 5.46023 9.53846 5.83333 9.9987 5.83333C10.4589 5.83333 10.832 5.46023 10.832 4.99999C10.832 4.53976 10.4589 4.16666 9.9987 4.16666C9.53846 4.16666 9.16536 4.53976 9.16536 5Z"
                    fill={aboutus ? "#335BF5" : "#1F1F22"}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_501_6260">
                    <rect
                      width="20"
                      height="20"
                      fill={aboutus ? "#335BF5" : "#1F1F22"}
                      transform="translate(20 20) rotate(180)"
                    />
                  </clipPath>
                </defs>
              </svg>

              <p
                className={`font-[500] flex items-center text-[18px] ${
                  aboutus ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                About Us
                <svg
                  className={`ml-[110px] text-[12px] ${
                    aboutus ? "text-[#335BF5]" : "text-[#000]"
                  } group-hover:text-[#335BF5]`}
                  width="20"
                  height="6"
                  viewBox="0 0 10 6"
                  fill="currentColor"
                >
                  <path d="M5 6L0 0H10L5 6Z" />
                </svg>
              </p>
            </div>
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                navigate(`/team`);
              }}
            >
              <RiTeamLine
                className={`text-[20px] ${
                  team ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              />
              <p
                className={`font-[500] text-[18px] ${
                  team ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                Our Team
              </p>
            </div>
            {/* <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                navigate(`/gallery`);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_187_5752)">
                  <path
                    d="M15.8333 0H10.8333C9.72867 0.00132321 8.66963 0.440735 7.88852 1.22185C7.1074 2.00296 6.66799 3.062 6.66667 4.16667V4.25C5.72618 4.44341 4.88112 4.95515 4.27393 5.69896C3.66674 6.44277 3.33455 7.37316 3.33333 8.33333V8.41667C2.39284 8.61008 1.54779 9.12182 0.940598 9.86562C0.333408 10.6094 0.0012121 11.5398 0 12.5L0 15.8333C0.00132321 16.938 0.440735 17.997 1.22185 18.7782C2.00296 19.5593 3.062 19.9987 4.16667 20H9.16667C10.2713 19.9987 11.3304 19.5593 12.1115 18.7782C12.8926 17.997 13.332 16.938 13.3333 15.8333V15.75C14.2738 15.5566 15.1189 15.0449 15.7261 14.301C16.3333 13.5572 16.6655 12.6268 16.6667 11.6667V11.5833C17.6072 11.3899 18.4522 10.8782 19.0594 10.1344C19.6666 9.39057 19.9988 8.46017 20 7.5V4.16667C19.9987 3.062 19.5593 2.00296 18.7782 1.22185C17.997 0.440735 16.938 0.00132321 15.8333 0ZM1.66667 12.5C1.66667 11.837 1.93006 11.2011 2.3989 10.7322C2.86774 10.2634 3.50363 10 4.16667 10H9.16667C9.61972 10.0012 10.0639 10.126 10.4512 10.361C10.8386 10.5959 11.1545 10.9321 11.365 11.3333L8.48583 14.2192L8.09 13.82C7.79492 13.5227 7.39835 13.348 6.97982 13.3308C6.5613 13.3137 6.15176 13.4554 5.83333 13.7275L1.9825 17.0275C1.77765 16.6627 1.66896 16.2517 1.66667 15.8333V12.5ZM11.6667 15.8333C11.6667 16.4964 11.4033 17.1323 10.9344 17.6011C10.4656 18.0699 9.82971 18.3333 9.16667 18.3333H4.16667C3.84714 18.3326 3.53076 18.2701 3.235 18.1492L6.90667 15L7.30333 15.4008C7.61588 15.7133 8.03973 15.8888 8.48167 15.8888C8.92361 15.8888 9.34745 15.7133 9.66 15.4008L11.6667 13.39V15.8333ZM15 11.6667C14.9979 12.1819 14.8366 12.6839 14.5383 13.1039C14.2399 13.524 13.8191 13.8416 13.3333 14.0133V12.5C13.332 11.3953 12.8926 10.3363 12.1115 9.55518C11.3304 8.77407 10.2713 8.33466 9.16667 8.33333H5C5 7.67029 5.26339 7.03441 5.73223 6.56557C6.20107 6.09673 6.83696 5.83333 7.5 5.83333H12.5C13.163 5.83333 13.7989 6.09673 14.2678 6.56557C14.7366 7.03441 15 7.67029 15 8.33333V11.6667ZM18.3333 7.5C18.3312 8.01522 18.1699 8.51719 17.8716 8.93725C17.5733 9.35731 17.1524 9.67493 16.6667 9.84667V8.33333C16.6653 7.22867 16.2259 6.16963 15.4448 5.38852C14.6637 4.6074 13.6047 4.16799 12.5 4.16667H8.33333C8.33333 3.50363 8.59672 2.86774 9.06557 2.3989C9.53441 1.93006 10.1703 1.66667 10.8333 1.66667H15.8333C16.4964 1.66667 17.1323 1.93006 17.6011 2.3989C18.0699 2.86774 18.3333 3.50363 18.3333 4.16667V7.5ZM3.33333 12.5C3.33333 12.3352 3.38221 12.1741 3.47378 12.037C3.56534 11.9 3.69549 11.7932 3.84776 11.7301C4.00004 11.667 4.16759 11.6505 4.32924 11.6827C4.49089 11.7148 4.63938 11.7942 4.75592 11.9107C4.87247 12.0273 4.95183 12.1758 4.98399 12.3374C5.01614 12.4991 4.99964 12.6666 4.93657 12.8189C4.87349 12.9712 4.76668 13.1013 4.62964 13.1929C4.4926 13.2845 4.33148 13.3333 4.16667 13.3333C3.94565 13.3333 3.73369 13.2455 3.57741 13.0893C3.42113 12.933 3.33333 12.721 3.33333 12.5Z"
                    fill={gallery ? "#335BF5" : "#1F1F22"}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_187_5752">
                    <rect width="20" height="20" fill="white" />
                  </clipPath>
                </defs>
              </svg>
              <p
                className={`font-[500] text-[18px] ${
                  gallery ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                Gallery
              </p>
            </div> */}
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                setServiceShown(true);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_187_5740)">
                  <path
                    d="M7.08405 7.91667C7.08405 8.37583 7.19071 8.81083 7.38071 9.1975C6.97238 9.72083 6.71821 10.37 6.68405 11.0775C5.89988 10.2542 5.41738 9.14083 5.41738 7.9175C5.41738 5.075 8.01905 2.82833 10.9665 3.43333C12.7015 3.79 14.1074 5.1875 14.4774 6.92C14.589 7.44333 14.6099 7.95583 14.5532 8.44584C14.5049 8.86084 14.1407 9.1675 13.7224 9.1675H13.6849C13.1915 9.1675 12.8449 8.72833 12.899 8.23833C12.9357 7.90917 12.9165 7.56333 12.8324 7.21083C12.584 6.16667 11.7324 5.32084 10.6865 5.08C8.78155 4.6425 7.08321 6.08583 7.08321 7.9175L7.08405 7.91667ZM3.84238 6.8375C4.07071 5.51 4.71988 4.3 5.72655 3.35583C7.00071 2.16167 8.66905 1.57167 10.4182 1.68C13.7124 1.89333 16.2882 4.77917 16.2499 8.23417C16.234 9.68083 15.0224 10.8325 13.5765 10.8325H11.5715C11.3682 10.1417 10.7365 9.63334 9.97988 9.63334C9.05905 9.63334 8.31321 10.3792 8.31321 11.3C8.31321 12.2208 9.05905 12.9667 9.97988 12.9667C10.4282 12.9667 10.834 12.7875 11.1332 12.4992H13.5765C15.9257 12.4992 17.8832 10.6283 17.9165 8.28C17.9782 3.92917 14.7099 0.287501 10.5257 0.017501C8.30571 -0.126666 6.19988 0.627501 4.58738 2.14083C3.33821 3.31167 2.50738 4.86167 2.20821 6.52917C2.11738 7.03583 2.51821 7.50083 3.03238 7.50083C3.42571 7.50083 3.77655 7.22667 3.84238 6.83833V6.8375ZM10.0007 14.1667C6.92155 14.1667 4.25738 16.0767 3.37155 18.9183C3.23405 19.3575 3.47988 19.825 3.91905 19.9625C4.35738 20.095 4.82488 19.8533 4.96238 19.415C5.61988 17.3067 7.69071 15.8333 9.99988 15.8333C12.309 15.8333 14.3807 17.3067 15.0374 19.415C15.149 19.7717 15.4774 20 15.8332 20C15.9157 20 15.9982 19.9875 16.0815 19.9625C16.5207 19.825 16.7657 19.3575 16.629 18.9183C15.7432 16.0767 13.079 14.1667 9.99988 14.1667H10.0007Z"
                    fill={service ? "#335BF5" : "#1F1F22"}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_187_5740">
                    <rect width="20" height="20" fill="white" />
                  </clipPath>
                </defs>
              </svg>
              <p
                className={`font-[500] text-[18px] ${
                  service ? "text-[#335BF5]" : "text-[#1F1F22]"
                } flex items-center`}
              >
                Services
                <svg
                  className={`ml-[120px] text-[12px] ${
                    service ? "text-[#335BF5]" : "text-[#000]"
                  } group-hover:text-[#335BF5]`}
                  width="20"
                  height="6"
                  viewBox="0 0 10 6"
                  fill="currentColor"
                >
                  <path d="M5 6L0 0H10L5 6Z" />
                </svg>
              </p>
            </div>
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                navigate(`/blogs`);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g clip-path="url(#clip0_501_6278)">
                  <rect width="20" height="20" fill="white" />
                  <path
                    d="M15.8333 1.66666H4.16667C1.86667 1.66666 0 3.53332 0 5.83332V14.1667C0 16.4667 1.86667 18.3333 4.16667 18.3333H10C10.4583 18.3333 10.8333 17.9583 10.8333 17.5C10.8333 17.0417 10.4583 16.6667 10 16.6667H4.16667C2.79167 16.6667 1.66667 15.5417 1.66667 14.1667V7.49999H18.3333V11.6667C18.3333 12.125 18.7083 12.5 19.1667 12.5C19.625 12.5 20 12.125 20 11.6667V5.83332C20 3.53332 18.1333 1.66666 15.8333 1.66666ZM1.66667 5.83332C1.66667 4.45832 2.79167 3.33332 4.16667 3.33332H15.8333C17.2083 3.33332 18.3333 4.45832 18.3333 5.83332H1.66667ZM13.675 10.1417C13.0417 9.50832 12.2083 9.16666 11.3167 9.16666H9.99167C9.53333 9.16666 9.15833 9.54166 9.15833 9.99999V11.325C9.15833 12.2167 9.50833 13.05 10.1333 13.6833L15.725 19.275C16.2 19.75 16.825 20.0083 17.4917 20.0083C18.1583 20.0083 18.7833 19.75 19.2583 19.275C19.7333 18.8 19.9917 18.175 19.9917 17.5083C19.9917 16.8417 19.7333 16.2167 19.2583 15.7417L13.6667 10.15L13.675 10.1417ZM18.0833 18.0917C17.7667 18.4083 17.2167 18.4083 16.9083 18.0917L11.3167 12.5C11 12.1833 10.825 11.7667 10.825 11.325V10.8333H11.3167C11.7583 10.8333 12.1833 11.0083 12.4917 11.325L18.0833 16.9167C18.2417 17.075 18.325 17.2833 18.325 17.5083C18.325 17.7333 18.2417 17.9417 18.0833 18.1V18.0917Z"
                    fill={blogs ? "#335BF5" : "#1F1F22"}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_501_6278">
                    <rect
                      width="20"
                      height="20"
                      fill={blogs ? "#335BF5" : "#1F1F22"}
                    />
                  </clipPath>
                </defs>
              </svg>

              <p
                className={`font-[500] text-[18px] ${
                  blogs ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                Blogs
              </p>
            </div>
           
            <div
              className="flex gap-[23px] items-center"
              onClick={() => {
                navigate(`/contact`);
              }}
            >
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M17.4993 10.3533V9.16666C17.4993 7.17753 16.7091 5.26988 15.3026 3.86336C13.896 2.45683 11.9884 1.66666 9.99927 1.66666C8.01014 1.66666 6.10249 2.45683 4.69597 3.86336C3.28944 5.26988 2.49927 7.17753 2.49927 9.16666V10.3533C1.62523 10.7382 0.909934 11.4116 0.473118 12.2609C0.0363026 13.1101 -0.0955155 14.0837 0.0997317 15.0185C0.294979 15.9534 0.80544 16.7928 1.54566 17.3962C2.28588 17.9996 3.21092 18.3305 4.16593 18.3333C4.60796 18.3333 5.03188 18.1577 5.34445 17.8452C5.65701 17.5326 5.8326 17.1087 5.8326 16.6667V11.6667C5.8326 11.2246 5.65701 10.8007 5.34445 10.4881C5.03188 10.1756 4.60796 9.99999 4.16593 9.99999V9.16666C4.16593 7.61956 4.78052 6.13583 5.87448 5.04187C6.96844 3.9479 8.45217 3.33332 9.99927 3.33332C11.5464 3.33332 13.0301 3.9479 14.1241 5.04187C15.218 6.13583 15.8326 7.61956 15.8326 9.16666V9.99999C15.3906 9.99999 14.9667 10.1756 14.6541 10.4881C14.3415 10.8007 14.1659 11.2246 14.1659 11.6667V16.6667H11.6659C11.4449 16.6667 11.233 16.7545 11.0767 16.9107C10.9204 17.067 10.8326 17.279 10.8326 17.5C10.8326 17.721 10.9204 17.933 11.0767 18.0892C11.233 18.2455 11.4449 18.3333 11.6659 18.3333H15.8326C16.7876 18.3305 17.7127 17.9996 18.4529 17.3962C19.1931 16.7928 19.7036 15.9534 19.8988 15.0185C20.094 14.0837 19.9622 13.1101 19.5254 12.2609C19.0886 11.4116 18.3733 10.7382 17.4993 10.3533ZM4.16593 16.6667C3.50289 16.6667 2.86701 16.4033 2.39817 15.9344C1.92933 15.4656 1.66593 14.8297 1.66593 14.1667C1.66593 13.5036 1.92933 12.8677 2.39817 12.3989C2.86701 11.93 3.50289 11.6667 4.16593 11.6667V16.6667ZM15.8326 16.6667V11.6667C16.4956 11.6667 17.1315 11.93 17.6004 12.3989C18.0692 12.8677 18.3326 13.5036 18.3326 14.1667C18.3326 14.8297 18.0692 15.4656 17.6004 15.9344C17.1315 16.4033 16.4956 16.6667 15.8326 16.6667Z"
                  fill={contact ? "#335BF5" : "#1F1F22"}
                />
              </svg>
              <p
                className={`font-[500] text-[18px] ${
                  contact ? "text-[#335BF5]" : "text-[#1F1F22]"
                }`}
              >
                Contact Us
              </p>
            </div>
           
          </div>
        )  : serviceShown ? (
          <div className="w-[80%] bg-[white] h-full flex flex-col">
            <div className="flex flex-row border-b-[0.8px] border-[#D3D3D3] h-[51px]">
              <div
                className="w-[15%] h-full flex items-center justify-center"
                onClick={() => {
                  setServiceShown(false);
                }}
              >
                <IoChevronBackOutline className="text-[24px]" />
              </div>
              <div className="h-full w-[0.8px] bg-[#D3D3D3]"></div>
              <div className="w-[70%] h-full flex items-center justify-center">
                <p className="font-[600] text-[18px]">Services</p>
              </div>
              <div className="h-full w-[0.8px] bg-[#D3D3D3]"></div>
              <div
                className="w-[15%] h-full flex items-center justify-center"
                onClick={() => {
                  setIsOpen(false);
                }}
              >
                <RxCross1 className="text-[18px]" />
              </div>
            </div>

            {services.map((service) => (
              <div
                key={service._id}
                className="flex flex-col w-full pl-[16px] pr-[7px] mt-[18px]"
              >
                <div
                  className="font-[700] text-[14px] leading-[21px] text-[#335BF5]"
                  onClick={() => {
                    router.push(`/service/${service._id}`);
                  }}
                >
                  {Parser(service.title)}
                </div>
                <div className="w-full h-[1px] bg-[#335BF587] mt-[7px]"></div>
                <div className="flex flex-col gap-[8px] mt-[12px]">
                  {service.subService.map((sub) => (
                    <div
                      key={sub._id}
                      className="font-[600] text-[12px] leading-[18px] text-[#000]"
                      onClick={() => {
                        router.push(`/service/subservice/${sub._id}`);
                      }}
                    >
                      {Parser(sub.title)}
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        ):(
          <div className="w-[80%] bg-[white] h-full flex flex-col">
          <div className="flex flex-row border-b-[0.8px] border-[#D3D3D3] h-[51px]">
            <div
              className="w-[15%] h-full flex items-center justify-center"
              onClick={() => {
                setAboutShown(false);
              }}
            >
              <IoChevronBackOutline className="text-[24px]" />
            </div>
            <div className="h-full w-[0.8px] bg-[#D3D3D3]"></div>
            <div className="w-[70%] h-full flex items-center justify-center">
              <p className="font-[600] text-[18px]">About Us</p>
            </div>
            <div className="h-full w-[0.8px] bg-[#D3D3D3]"></div>
            <div
              className="w-[15%] h-full flex items-center justify-center"
              onClick={() => {
                setIsOpen(false);
              }}
            >
              <RxCross1 className="text-[18px]" />
            </div>
          </div>

          
            <div
             
              className="flex flex-col w-full pl-[16px] pr-[7px] mt-[18px]"
            >
              <div className="flex flex-col gap-[8px] mt-[12px]">
                {aboutOptions.map((sub) => (
                  <div
                    key={sub.id}
                    className="font-[600] text-[14px] leading-[18px] text-[#000]"
                    onClick={() => {
                      router.push(`${sub.path}`);
                    }}
                  >
                    {sub.title}
                  </div>
                ))}
              </div>
            </div>
          
        </div>
        )
        }
      </div>
    )
  );
};

export default Sidebar;
